{
	"info": {
		"_postman_id": "35abb045-b2e4-4aab-8ec4-d4b6b350c9d4",
		"name": "Scriptorium",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31557793"
	},
	"item": [
		{
			"name": "execute",
			"item": [
				{
					"name": "Python",
					"item": [
						{
							"name": "execute-success",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"Python\",\n    \"code\": \n  \"import sys\\n\\nfor line in sys.stdin:\\n    print(f'Hello, {line.strip()}')\"\n  ,\n    \"stdin\": \"World\",\n    \"timeout\": 5\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "execute-failure",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"C\",\n    \"code\": \"#include <stdio.h>\\n\\nint main() {\\n    int result = 1 / 0;\\n    printf(\\\"Result: %d\\\\n\\\", result);\\n    return 0;\\n}\",\n    \"stdin\": \"\",\n    \"timeout\": 5\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "C",
					"item": [
						{
							"name": "execute-success",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"C\",\n    \"code\": \"#include <stdio.h>\\n#include <string.h>\\n\\nint main() {\\n    char input[100];\\n    if (fgets(input, sizeof(input), stdin) != NULL) {\\n        // Remove newline character if present\\n        size_t len = strlen(input);\\n        if (len > 0 && input[len - 1] == '\\\\n') {\\n            input[len - 1] = '\\\\0';\\n        }\\n        printf(\\\"Hello, %s\\\\n\\\", input);\\n    }\\n    return 0;\\n}\",\n    \"stdin\": \"World\",\n    \"timeout\": 5\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "execute-failure",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"Python\",\n    \"code\": \"print(1 / 0)\",\n    \"stdin\": \"\",\n    \"timeout\": 5\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "JS",
					"item": [
						{
							"name": "execute-success",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"JS\",\n    \"code\": \"const readline = require('readline');\\n\\nconst rl = readline.createInterface({\\n  input: process.stdin,\\n  output: process.stdout,\\n  terminal: false\\n});\\n\\nrl.on('line', (line) => {\\n   console.log(`Hello, ${line.trim()}`);\\n});\\n\\nrl.on('end', () => {\\n    process.exit(0);\\n });\",\n    \"stdin\": \"World\",\n    \"timeout\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "execute-failure",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"JS\",\n    \"code\": \"console.log('expect an error in stderr'); throw new Error('ERROR');\",\n    \"stdin\": \"World\",\n    \"timeout\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						}
					],
					"description": "Execution for Javascript on Server"
				},
				{
					"name": "Java",
					"item": [
						{
							"name": "execute-success-java",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"Java\",\n    \"code\": \"class Main { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\"); } }\",\n    \"stdin\": \"\",\n    \"timeout\": 5000\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "execute-failure-java",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"Java\",\n    \"code\": \"class Main { public static void main(String[] args) { int x = 5 / 0; System.out.println(x); } }\",\n    \"stdin\": \"\",\n    \"timeout\": 5000\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "C++",
					"item": [
						{
							"name": "execute-success-c++",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"C++\",\n    \"code\": \"#include <iostream>\\nusing namespace std;\\n\\nint main() {\\n  int x;\\n // Type a number and press enter\\n  cin >> x; // Get user input from the keyboard\\n  cout << \\\"Your number is: \\\" << x;\\n  return 0;\\n}\",\n    \"stdin\": \"5\",\n    \"timeout\": 5\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "execute-failure-c++",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language\": \"C++\",\n    \"code\": \"#include <iostream>\\n\\nint main() {\\n    int x = 1;\\n    int y = 0;\\n    std::cout << (x / y) << std::endl;\\n    return 0;\\n}\",\n    \"stdin\": \"\",\n    \"timeout\": 5\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/execute",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"execute"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Written by Postbot; modified by human:  \n  \nThis endpoint allows users to execute a code snippet in the specified programming language. The request should be sent via an HTTP POST method to the URL api/execute. The request body should be in raw format and include the following parameters:\n\n- \"language\" (string): should be either \"C++\", \"JS\", \"Python\", \"Java\", or \"C\"; otherwise, error 400 is retunred with message language not supported.\n    \n- \"code\" (string): The actual code snippet to be executed; note that quotes should be escaped.\n    \n- \"stdin\" (string): The standard input for the code execution.\n    \n- \"timeout\" (number): The maximum time limit for the code execution in seconds. (implemented in Part 2)\n    \n\nThe response to the request will have status code 400 or 200. The response body will include the following parameters:\n\n- \"stdout\" (string): The standard output generated by the code execution.\n    \n- \"stderr\" (string): The standard error output generated by the code execution."
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "user-protected-request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiZW1haWwiOiJyYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3MzAyNjIxOTYsImV4cCI6MTczMDI2NTc5Nn0.6VTT968n5_rabYFU9Sxd4IWeUeUJ8xozfhCEv69kFAw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"hello"
							]
						}
					},
					"response": []
				},
				{
					"name": "signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Rodrigo Hernández Cascante\",\r\n  \"email\": \"Rodrigo@example.com\",\r\n  \"password\": \"passwordForScriptorium\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"Rodrigo@example.com\",\r\n  \"password\": \"passwordForScriptorium\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin-pretected-request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTczMDM4NDcxNCwiZXhwIjoxNzMwMzg4MzE0fQ.6zRGqYRPU3qR4jDLZYu6OzI59tFly4-n-ARyoAO1uFw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"hello"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "profile",
					"item": [
						{
							"name": "get-profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTczMDMzNTcyMCwiZXhwIjoxNzMwMzM5MzIwfQ.Pah8vx0ZECIbch6ZZMU57qg5HbN2IINzMhs9q_VESVE",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/user/profile",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"user",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "put-profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTczMDM0ODA5OCwiZXhwIjoxNzMwMzUxNjk4fQ.vut2V06czXfHnh4ujxTeDBpSY_Ob8x4zXhY2P33hCgw",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"New Name\",\r\n  \"email\": \"dhedb@gmail.com\",\r\n  \"password\": \"passwordForScriptorium\",\r\n  \"avatarId\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/user/profile",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"user",
										"profile"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "blogposts",
					"item": [
						{
							"name": "get-posts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/blogposts?pageSize=1&sortBy=valued&page=1&tags=Cynthia",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"blogposts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "1"
										},
										{
											"key": "sortBy",
											"value": "valued"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "tags",
											"value": "Cynthia"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "code-templates",
			"item": [
				{
					"name": "save-template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Hello World\",\n    \"description\": \"A simple Hello World program\",\n    \"code\": \"print(\\\"hello world\\\")\",\n    \"language\": \"Python\",\n    \"tags\": [\"beginner\", \"python\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/code-templates/save-template",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"code-template",
								""
							]
						},
						"description": "This endpoint allows you to save a code template by sending an HTTP POST request to the specified URL. The request should include the title, description, code, language, and tags for the template.\n\n### Request Body\n\n- title (string): The title of the code template.\n    \n- description (string): A brief description of the code template.\n    \n- code (string): The actual code content of the template.\n    \n- language (string): must be one of \"C++\", \"C\", \"Python\", \"Java\", or \"JS\".\n    \n- tags (array of strings): Tags associated with the code template; can be any string\n    \n\n### Response\n\nUpon successful execution, the endpoint returns a 200 status with a JSON response containing a message and the code template data created.\n\nExample:\n\n``` json\n{\n    \"message\": \"Code Template Saved: \\n \\n {\\n  \\\"id\\\": 2,\\n  \\\"title\\\": \\\"Hello World\\\",\\n  \\\"description\\\": \\\"A simple Hello World program\\\",\\n  \\\"code\\\": \\\"print(\\\\\\\"hello world\\\\\\\")\\\",\\n  \\\"language\\\": \\\"Python\\\",\\n  \\\"userId\\\": 1\\n}\"\n\n\n ```"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	}
}